apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: microfrontends-controller
    app.kubernetes.io/part-of: microfrontends-controller
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: microfrontends-controller
    app.kubernetes.io/part-of: microfrontends-controller
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - name: microfrontends-webui-container
        image: sevcikmichal/microfrontends-webui:v0.0.1
        imagePullPolicy: Always
        env:
          - name: BASE_URL
            value: "/ui/"
          - name: HTTP_CSP_HEADER
            value: "default-src 'self'; font-src 'self' data: https://fonts.googleapis.com/ https://fonts.gstatic.com/; script-src 'strict-dynamic' 'nonce-{NONCE_VALUE}'; manifest-src 'self' https://github.com/login/oauth/; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com/ https://fonts.gstatic.com/; img-src 'self' https://seccdn.libravatar.org/; connect-src 'self' https://virtserver.swaggerhub.com/;"
        ports:
        - name: webapi-port
          containerPort: 8082
        resources:
          requests:
            memory: "32Mi"
            cpu: "0.1"
          limits:
            memory: "128Mi"
            cpu: "0.3"
      - command:
        - /manager
        args:
        - --leader-elect
        image: controller:latest
        ports:
        - containerPort: 80 # update port based on HTTP_PORT configuration
        name: manager
        env:
          - name: BASE_URL
            value: "/ui/"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
